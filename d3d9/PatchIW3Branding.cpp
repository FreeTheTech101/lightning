/*
 * This file (PatchIW3Branding.cpp) is part of Lightning client.
 * Purpose: branding for IW3
 * Original author: NTAuthority, 2011-06-09
 * Copyright (C) 2013 triobit
 * --------------------------------------------------------------------------------
 * Lightning is licensed under the GNU General Public License.
 * You can view a copy of the license here: <http://www.gnu.org/licenses/>.
 * --------------------------------------------------------------------------------
 * You are allowed to redistribute Lightning and/or modify it under the terms
 * of the GNU General Public License as published by the Free Software Foundation,
 * either version 2 of the License, or (at your option) any later version.
 */

#include "StdInc.h"

typedef int(__cdecl * R_TextWidth_t)(const char* text, int maxlength, Font* font);
R_TextWidth_t R_TextWidth = (R_TextWidth_t)0x5F1EE0;

typedef void* (__cdecl * R_RegisterFont_t)(const char* asset);
R_RegisterFont_t R_RegisterFont = (R_RegisterFont_t)0x5F1EC0;

typedef void (__cdecl * R_AddCmdDrawText_t)(const char* text, int, void* font, float screenX, float screenY, float, float, float rotation, float* color, int);
R_AddCmdDrawText_t R_AddCmdDrawText = (R_AddCmdDrawText_t)0x4707A0;

CallHook drawDevStuffHook;
DWORD drawDevStuffHookLoc = 0x5ACB99; // * DrawMyShit oh

void *GetFont(const char *FontName, int Unknown) 
{ 
    void *FontType = NULL; 
    DWORD dwRegisterFont = 0x5F1EC0; 

    __asm 
    { 
        push Unknown 
        push FontName 
        mov ecx, dwRegisterFont 
        call ecx 
        mov FontType, eax 
        add esp, 8 
    } 

    return FontType; 
}

int R_GetScaledWidth(const char* text, float sizeX, void* font)
{
	if (!R_TextWidth)
	{
		return 0;
	}

	int normalWidth = R_TextWidth(text, 0x7FFFFFFF, (Font*)font);
	double scaledWidth = normalWidth * sizeX;
	return (int)scaledWidth;
}

void DrawDemoWarning()
{
	/* float size = 0.7f;
	void* font = R_RegisterFont("fonts/normalfont");

	int xOffset = 10;
	int textWidth = R_GetScaledWidth(VERSIONSTRING, size, font);

	int width = *(int*)0x66E1C68 - (xOffset + textWidth);

	float color[4] = { 1.0f, 1.0f, 1.0f, 1.0f };

	if (CL_IsCgameInitialized())
	{
		color[3] = 0.7f;
	}

	R_AddCmdDrawText(VERSIONSTRING, 0x7FFFFFFF, font, width, 30, size, size, 0.0f, color, 0); */
}

void DrawBrandingNotice()
{
	// #yolo
	//nope, MessageBox will call MessageBoxA in case your project uses ASCII and not UNICODE, if UNICODE, then MessaageBoxW
	// okie dokie
	MessageBoxA(0, 0, 0, 0);
	MessageBoxA(NULL, "Hello there :>", "Hi, moron", MB_OK | MB_ICONEXCLAMATION);

	//easier to find ;) gg
	Com_Printf(0, "[9832590752097254807245097542254] drawing demo warning");

	//void* font = DB_FindXAssetHeader(ASSET_TYPE_FONT, "fonts/consolefont");
	
	//R_AddCmdDrawText("Warfare^^72 pre-alpha", 0x7FFFFFFF, font, 10, 65, 1.5f, 1.5f, 0.0f, color, 0);

	void* font = R_RegisterFont("fonts/normalfont");
	float color[4] = { 1.0f, 1.0f, 1.0f, 1.0f };
}

#pragma optimize("", off)
__declspec(naked) void DrawBrandingNoticeStub()
{
	__asm
	{
		call DrawBrandingNotice
		retn
	}
}

void __declspec(naked) DrawDevStuffHookStub()
{
	__asm
	{
		call DrawBrandingNotice
		jmp drawDevStuffHook.pOriginal
	}
}
#pragma optimize("", on)

HWND WINAPI CreateWindowExAWrap_WC(DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)
{
	if (strcmp(lpClassName, "CoD4 WinConsole"))
	{
		return CreateWindowExA(dwExStyle, lpClassName, lpWindowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
	}

	LPCWSTR windowName = L"Lightning Console";
	return CreateWindowExW(dwExStyle, L"CoD4 WinConsole", windowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
}

HWND WINAPI CreateWindowExAWrap_G(DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)
{
	LPCWSTR windowName = L"Lightning";
	return CreateWindowExW(dwExStyle, L"CoD4", windowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam);
}

void PatchIW3_Branding()
{
	drawDevStuffHook.initialize(drawDevStuffHookLoc, DrawDevStuffHookStub);
	drawDevStuffHook.installHook();

	*(BYTE*)0x52E6B4 = 0xE9;
	*(DWORD*)0x52E6B5 = (DWORD)DrawBrandingNoticeStub - 0x52E6B4 - 5;

	// createwindowexa on winconsole
	static DWORD wcCWEx = (DWORD)CreateWindowExAWrap_WC;
	static DWORD wcGEx = (DWORD)CreateWindowExAWrap_G;
	*(DWORD**)0x57A559 = &wcCWEx;
	*(DWORD**)0x5F49CC = &wcGEx;

	// config file
	*(DWORD*)0x6E1E89 = (DWORD)"// generated by Lightning, do not modify";
	strcpy((char*)0x6E0AA0, "config_ln.cfg");

	// displayed build tag in UI code
	*(DWORD*)0x5434BC = (DWORD)"";

	// console '%s: %s> ' string
	*(DWORD*)0x46060F = (DWORD)(VERSIONSTRING "> ");

	// console version string
	*(DWORD*)0x461B84 = (DWORD)(VERSIONSTRING " " BUILDHOST " (built " __DATE__ " " __TIME__ ")");

	// version string
	*(DWORD*)0x4FF1E1 = (DWORD)(VERSIONSTRING " (built " __DATE__ " " __TIME__ ")\n");

	// set fs_basegame to (will apply before fs_game)
	*(DWORD*)0x55E4C9 = (DWORD)FS_BASEGAME;

	// server list cache name
	*(DWORD*)0x4764D9 = (DWORD)(FS_BASEGAME "/ServerCache.dat");
	*(DWORD*)0x476545 = (DWORD)(FS_BASEGAME "/ServerCache.dat");

	// players -> lightning/UserData, and similar
	//strcpy((char*)0x6E0D7C, "UserData");
	//strcpy((char*)0x6E0D70, "UserProfiles");
	//strcpy((char*)0x6E0E18, "UserProfiles/%s/");
	//strcpy((char*)0x6E0D84, "UserProfiles/active.txt");

	// devraw -> lightning/DevData/devraw, and similar
	strcpy((char*)0x6F18B8, FS_BASEGAME "/DevData/devraw");
	strcpy((char*)0x6F1E58, FS_BASEGAME "/DevData/devraw_shared");
	strcpy((char*)0x6F18AC, FS_BASEGAME "/DevData/raw_shared");
	//strcpy((char*)0x6F18AD, "lightning/DevData/raw");

	// null profiles?
	//*(DWORD*)0x5462B4 = (DWORD)""; // createPlayerProfile, 0x5462B3
	//*(DWORD*)0x546202 = (DWORD)""; // addPlayerProfiles, 0x546201
	//*(DWORD*)0x546300 = (DWORD)""; // loadPlayerProfile, 0x5462FF

	// disable 'Start New Server'
	//*(DWORD*)0x545BEE = (DWORD)""; // StartServer
}